[{"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\index.js":"1","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\App.js":"2","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\HomePage\\HomeStructure.js":"4","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\CataloguePage\\CatalogueStructure.js":"5","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\reducers\\index.js":"6","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\CataloguePage\\Arc.js":"7","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\CataloguePage\\Cru.js":"8","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\Components\\Navbar.js":"9","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\CataloguePage\\Wtr.js":"10","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\CataloguePage\\Mon.js":"11","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\ContactPage\\SignIn.js":"12","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\Components\\Paymentok.js":"13","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\CartPage\\CartList.js":"14","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\CataloguePage\\product\\ArcSealed.js":"15","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\ContactPage\\ContactStructure.js":"16","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\CataloguePage\\product\\WtrSealed.js":"17","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\CataloguePage\\product\\CruSealed.js":"18","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\CataloguePage\\product\\MonSealed.js":"19","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\CommandPage\\Command.js":"20","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\reducers\\counter.js":"21","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\reducers\\isLogged.js":"22","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\reducers\\user.js":"23","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\reducers\\totalCart.js":"24","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\Components\\Cards.js":"25","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\reducers\\cart.js":"26","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\Components\\Paypal.js":"27","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\actions\\index.js":"28","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\Components\\Loadingbar.js":"29"},{"size":517,"mtime":1612971320132,"results":"30","hashOfConfig":"31"},{"size":2476,"mtime":1612971320113,"results":"32","hashOfConfig":"31"},{"size":381,"mtime":1612971320135,"results":"33","hashOfConfig":"31"},{"size":289,"mtime":1612971320127,"results":"34","hashOfConfig":"31"},{"size":882,"mtime":1612971320116,"results":"35","hashOfConfig":"31"},{"size":819,"mtime":1612971320133,"results":"36","hashOfConfig":"31"},{"size":2913,"mtime":1612971320114,"results":"37","hashOfConfig":"31"},{"size":2898,"mtime":1612971320116,"results":"38","hashOfConfig":"31"},{"size":5789,"mtime":1613085215521,"results":"39","hashOfConfig":"31"},{"size":3266,"mtime":1612971320117,"results":"40","hashOfConfig":"31"},{"size":2898,"mtime":1612971320117,"results":"41","hashOfConfig":"31"},{"size":6662,"mtime":1613675547122,"results":"42","hashOfConfig":"31"},{"size":654,"mtime":1612971320125,"results":"43","hashOfConfig":"31"},{"size":17793,"mtime":1612971320114,"results":"44","hashOfConfig":"31"},{"size":1593,"mtime":1612971320117,"results":"45","hashOfConfig":"31"},{"size":1021,"mtime":1613086007087,"results":"46","hashOfConfig":"31"},{"size":1593,"mtime":1612971320121,"results":"47","hashOfConfig":"31"},{"size":1593,"mtime":1612971320118,"results":"48","hashOfConfig":"31"},{"size":1593,"mtime":1612971320118,"results":"49","hashOfConfig":"31"},{"size":8815,"mtime":1612971320121,"results":"50","hashOfConfig":"31"},{"size":330,"mtime":1612971320133,"results":"51","hashOfConfig":"31"},{"size":217,"mtime":1612971320134,"results":"52","hashOfConfig":"31"},{"size":398,"mtime":1612971320134,"results":"53","hashOfConfig":"31"},{"size":354,"mtime":1612971320134,"results":"54","hashOfConfig":"31"},{"size":2587,"mtime":1612971320123,"results":"55","hashOfConfig":"31"},{"size":752,"mtime":1612971320133,"results":"56","hashOfConfig":"31"},{"size":4498,"mtime":1612971320125,"results":"57","hashOfConfig":"31"},{"size":1805,"mtime":1612971320131,"results":"58","hashOfConfig":"31"},{"size":235,"mtime":1612971320124,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"m95xok",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\index.js",[],["121","122"],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\App.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\HomePage\\HomeStructure.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\CataloguePage\\CatalogueStructure.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\reducers\\index.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\CataloguePage\\Arc.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\CataloguePage\\Cru.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\Components\\Navbar.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\CataloguePage\\Wtr.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\CataloguePage\\Mon.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\ContactPage\\SignIn.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\Components\\Paymentok.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\CartPage\\CartList.js",["123","124"],"import React,{ useState, useEffect } from 'react'\r\n\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { decrement,removeFromCart,addUser,changeOrder } from '../actions/index'\r\n\r\nimport './CartList.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Paypal from '../Components/Paypal';\r\n\r\n\r\n\r\nfunction CartList() {\r\n\r\n\r\n//========================================================================================================================================================\r\n/* \r\nSTATE, SELECTOR FOR REDUX AND USE EFFECT\r\n*/\r\n//========================================================================================================================================================\r\n    const  [cart,setCart] = useState([])\r\n    const  [elementToDisplay,setElementToDisplay] = useState(0)\r\n    const  [totalOrder,setTotalOrder] = useState(0)\r\n    const  [deliveryFees,setDeliveryFees] = useState(4)\r\n    const  [formLivraison,setFormLivraison] = useState({firstname:\"\",lastname:\"\",adress:\"\",zip:\"\",city:\"\",country:\"\"})\r\n    const  [isOkToPay,setIsOkToPay] = useState(false)\r\n    const  [error,setError] = useState(\"\")\r\n    const  [ifbox,setifbox] = useState(false)\r\n\r\n    const CartList = useSelector(state => state.cart)\r\n    const userData = useSelector(state => state.user)\r\n    const isLogged = useSelector(state => state.isLogged)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    var history = useHistory()\r\n\r\n    useEffect(() => {\r\n        var cardListOrder = []\r\n\r\n        // Suppr des doubles des cartes / Add quantity\r\n            CartList.arr.forEach(cards => {\r\n            if(cardListOrder.find(e=> e.title === cards.title) === undefined){\r\n                cards.quantity = CartList.arr.filter(e => e.title.includes(cards.title)).length\r\n                cardListOrder.push(cards)\r\n            }\r\n            console.log(cards)\r\n            if(cards.category === undefined){\r\n                setifbox(true)\r\n            }\r\n        });\r\n\r\n        // init new list card\r\n        setCart(cardListOrder)\r\n\r\n        // init calcul total\r\n        var totalcopy = 0\r\n        CartList.arr.forEach(cards => {\r\n            totalcopy = totalcopy + parseFloat(cards.price)\r\n        });\r\n        setTotalOrder(totalcopy)\r\n\r\n        if(isLogged){\r\n            setFormLivraison({\r\n                firstname:\"\",\r\n                lastname:\"\",\r\n                adress:userData.arr.adress.street,\r\n                zip:userData.arr.adress.zip,\r\n                city:userData.arr.adress.city,\r\n                country:userData.arr.adress.country\r\n            })\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n    }, [cart,totalOrder,error])\r\n\r\n\r\n\r\n\r\n//========================================================================================================================================================\r\n/*\r\nREMOVE ITEM FROM FRONT END AND FROM REDUX ARRAY AT SAME TIME\r\n*/\r\n//========================================================================================================================================================\r\n    function removeFromList (i){\r\n        for (let k = 0; k < i.quantity; k++) {\r\n            dispatch(removeFromCart(i.index))\r\n            dispatch(decrement())\r\n        }\r\n        cart.splice(i.index, 1)\r\n    }\r\n\r\n    function roundDecimal(nombre, precision){\r\n         precision = precision || 2;\r\n        var tmp = Math.pow(10, precision);\r\n        return Math.round( nombre*tmp )/tmp;\r\n    }\r\n\r\n    var confFormulaire = ()=>{\r\n        console.log(userData.arr);\r\n        console.log(formLivraison);\r\n\r\n        fetch(\"/users/updateAdresseLivraison\",{\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                idUser:userData.arr._id,\r\n                street:formLivraison.adress,\r\n                zip:formLivraison.zip,\r\n                city:formLivraison.city,\r\n                deliveryfirstname: formLivraison.firstname,\r\n                deliverylastname : formLivraison.lastname,\r\n                country:formLivraison.country}),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              }\r\n        }).then(response=> {\r\n            return response.json()\r\n        })\r\n        .then(data=>{\r\n            dispatch(addUser(data.user))\r\n\r\n            // ---------------------------------------------- function paypal ----------------------------------------------\r\n            console.log(\"retour fetch maj adresse livraison\",data);\r\n            console.log(\"INFO FORMULAIRE\",formLivraison);\r\n            console.log(\"INFO PANIER\",cart);\r\n            console.log(\"TOTAL PANIER\",roundDecimal(totalOrder,2));\r\n            setIsOkToPay(true)\r\n\r\n        })\r\n        .catch((error)=>{\r\n            console.log(\"Request failed recup user\", error );\r\n        })\r\n        \r\n    }\r\n\r\n    var verifBDD = ()=>{\r\n        fetch(\"/verifQuantityBDD\",{\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                panier:cart,\r\n                paid: false\r\n            }),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              }\r\n        }).then(response=> {\r\n            return response.json()\r\n        })\r\n        .then(data=>{\r\n\r\n            //retour fetch verif bdd\r\n            if (data.errorStock.length === 0) {\r\n                goBackAndComeBackBugFix()\r\n            }else{\r\n                // redirect panier + modif order\r\n                console.log(\"errorStock\",data.errorStock);\r\n\r\n                var newOrder = CartList.arr.filter((item) => {\r\n                    if (data.errorStock.includes(item.title)) {\r\n                        dispatch(decrement())\r\n                    }\r\n                    var copyTotal = totalOrder \r\n                    copyTotal = copyTotal - item.price*item.quantity\r\n                    setTotalOrder(copyTotal)\r\n\r\n                    return !data.errorStock.includes(item.title)\r\n                })\r\n                dispatch(changeOrder(newOrder))\r\n\r\n                history.push(\"/\")\r\n                history.push(\"/cart\")\r\n\r\n\r\n            }\r\n\r\n        })\r\n        .catch((error)=>{\r\n            console.log(\"Request failed recup user\", error );\r\n        })\r\n    }\r\n\r\n//========================================================================================================================================================\r\n/*\r\n    SET DELIVERY FEES DEPENDING ON COUNTRY\r\n*/\r\n//========================================================================================================================================================\r\n    function selectCountry (e){\r\n        if(e.target.value === ''){\r\n            if(ifbox){\r\n                setDeliveryFees(15)\r\n                console.log(deliveryFees)\r\n            }else{\r\n                setDeliveryFees(4)\r\n                console.log(deliveryFees)\r\n            } \r\n        }\r\n        else if((e.target.value === 'France' && totalOrder < 30) || (e.target.value === 'Europe' && totalOrder < 30)){\r\n            setDeliveryFees(4)\r\n            var copyAdress =  {...formLivraison}\r\n            copyAdress.country = e.target.value\r\n            setFormLivraison(copyAdress)\r\n        }\r\n        else if((e.target.value === 'France' && totalOrder >= 30) || (e.target.value === 'Europe' && totalOrder >= 30)){\r\n            if(ifbox){\r\n                setDeliveryFees(15)\r\n                console.log(deliveryFees)\r\n                copyAdress =  {...formLivraison}\r\n                copyAdress.country = e.target.value\r\n                setFormLivraison(copyAdress)\r\n            }else{\r\n                setDeliveryFees(8)\r\n                copyAdress =  {...formLivraison}\r\n                copyAdress.country = e.target.value\r\n                setFormLivraison(copyAdress)\r\n            }\r\n            \r\n        }\r\n        else if(e.target.value === 'Other Country' && totalOrder < 30){\r\n            setDeliveryFees(15)\r\n            copyAdress =  {...formLivraison}\r\n            copyAdress.country = e.target.value\r\n            setFormLivraison(copyAdress)\r\n        }\r\n        else if(e.target.value === 'Other Country' && totalOrder >= 30){\r\n            if(ifbox){\r\n                setDeliveryFees(35)\r\n                copyAdress =  {...formLivraison}\r\n                copyAdress.country = e.target.value\r\n                setFormLivraison(copyAdress)\r\n            }else{\r\n                setDeliveryFees(21)\r\n                copyAdress =  {...formLivraison}\r\n                copyAdress.country = e.target.value\r\n                setFormLivraison(copyAdress)\r\n            }\r\n        }\r\n        else{\r\n            setDeliveryFees(25)\r\n            copyAdress =  {...formLivraison}\r\n            copyAdress.country = e.target.value\r\n            setFormLivraison(copyAdress)\r\n        }\r\n    }\r\n\r\n    function resetSelectedCountry(){\r\n        setElementToDisplay(0)\r\n        setIsOkToPay(false)\r\n        setDeliveryFees(totalOrder >= 30? 8:4)\r\n    }\r\n\r\n    function goBackAndComeBackBugFix(){\r\n        if(totalOrder >= 30){\r\n            if(ifbox){\r\n                setDeliveryFees(15)\r\n            }else{\r\n                setDeliveryFees(8)\r\n            }\r\n        }else{\r\n            setDeliveryFees(4)\r\n        }\r\n        setElementToDisplay(1)\r\n\r\n    }\r\n\r\n//========================================================================================================================================================\r\n/* \r\nRETURN\r\n*/\r\n//========================================================================================================================================================\r\n   if(cart.length > 0 && elementToDisplay === 0){\r\n    return (\r\n            <div className='cart__cartList'>\r\n                {\r\n                cart.map(function(item, i){\r\n                    return<div key={i} className='cart__product'>\r\n                        <img src={item.src} alt='' width='100' height='100'/>\r\n                        <p>{item.title}</p>\r\n                        <p>Quantity : {item.quantity}</p>\r\n                        <p> {item.price} €</p>\r\n                        <ClearIcon\r\n                            onClick={()=>{\r\n                                var copyTotal = totalOrder\r\n                                copyTotal = copyTotal - item.price*item.quantity\r\n                                setTotalOrder(copyTotal)\r\n                                removeFromList({index:i,quantity:item.quantity})\r\n                                \r\n                                if(cart.find(e => e.category === undefined) === undefined){\r\n                                    setifbox(false)\r\n                                }\r\n                            }} \r\n                            style={{color:'red', cursor:'pointer',fontSize:'25'}}/>\r\n                    </div>\r\n                  })\r\n                }\r\n                <div className='Total__cart_container'>\r\n                            Total : {roundDecimal(totalOrder,2)+\"€\"}\r\n                </div>\r\n                <Link to='/wtr' style={{textDecoration:'none'}}>\r\n                    <div \r\n                        className='buttons__return__cart'>\r\n                            Back to Shopping\r\n                    </div>\r\n                </Link>\r\n\r\n                    <div \r\n                        className='buttons__return__cart2'\r\n                        onClick={()=>{\r\n                            if(isLogged){\r\n                                // if connection verif stock bdd\r\n                                verifBDD()\r\n                            }else{\r\n                                history.push(\"sign-in\")\r\n                            }\r\n                        }}>\r\n                            Order\r\n                    </div>\r\n                \r\n            </div>\r\n        \r\n        )}\r\n//========================================================================================================================================================\r\n/* \r\nIF EMPTY CART RETURN\r\n*/\r\n//========================================================================================================================================================\r\n    else if(cart.length === 0 && elementToDisplay === 0){\r\n        return(\r\n            <p style={{minHeight:'90vh',display:'flex',justifyContent:'center',alignItems:'center',width:'100%',marginTop:0}}>No Product in Cart</p>\r\n        )\r\n    }\r\n//========================================================================================================================================================\r\n/* \r\nIF clicked on order and cart not empty\r\n*/\r\n//========================================================================================================================================================\r\n    else if(elementToDisplay === 1 && cart.length > 0){\r\n        return(\r\n            <div className='cart__cartList' style={{paddingTop:0}}>\r\n                <div style={{minHeight:'85vh',maxHeight:'90vh',display:'flex',justifyContent:'center',alignItems:'center',width:'100%',marginTop:0}}>\r\n                    <div className='form__container__payment'>\r\n                        <input required type='text' placeholder='LastName' value={formLivraison.lastname} onChange={(e)=>{\r\n                            var copyFormLivraison = {...formLivraison}\r\n                            copyFormLivraison.lastname = e.target.value\r\n                            setFormLivraison(copyFormLivraison)\r\n                        }} ></input>\r\n                        <input required type='text' placeholder='FirstName' value={formLivraison.firstname} onChange={(e)=>{\r\n                            var copyFormLivraison = {...formLivraison}\r\n                            copyFormLivraison.firstname = e.target.value\r\n                            setFormLivraison(copyFormLivraison)\r\n                        }} ></input>\r\n                        <input required type='text' placeholder='Delivery Adress' value={formLivraison.adress} onChange={(e)=>{\r\n                            var copyFormLivraison = {...formLivraison}\r\n                            copyFormLivraison.adress = e.target.value\r\n                            setFormLivraison(copyFormLivraison)\r\n                        }} ></input>\r\n                        <input required type='text' placeholder='City' value={formLivraison.city} onChange={(e)=>{\r\n                            var copyFormLivraison = {...formLivraison}\r\n                            copyFormLivraison.city = e.target.value\r\n                            setFormLivraison(copyFormLivraison)\r\n                        }} ></input>\r\n                        <input required type='text' placeholder='Zip' value={formLivraison.zip} onChange={(e)=>{\r\n                            var copyFormLivraison = {...formLivraison}\r\n                            copyFormLivraison.zip = e.target.value\r\n                            setFormLivraison(copyFormLivraison)\r\n                        }} ></input>\r\n\r\n{/* //========================================================================================================================================================\r\n\r\nFor select menu and calculate delivery fees\r\n\r\n//======================================================================================================================================================== */}\r\n                        <select defaultValue='France' onChange={(e)=>selectCountry(e)}>\r\n                            <option value='France'>France</option>\r\n                            <option value='Europe'>Europe</option>\r\n                            <option value='Other Country'>Other country</option>\r\n                        </select>\r\n{/*======================================================================================================================================================== */}\r\n                        <div className='error__message__login'>{error}</div>\r\n                        <div className=\"payment-div\">{isOkToPay?\r\n                            <Paypal\r\n                            totalFtp={roundDecimal(totalOrder + deliveryFees)}\r\n                            total={roundDecimal(totalOrder)}\r\n                            userData={userData.arr}\r\n                            panier={cart}\r\n                            ftp={deliveryFees}\r\n                            deliveryname={formLivraison.firstname +' '+formLivraison.lastname}\r\n                            />:<div className=\"buttons_gotopayment\" onClick={()=>{\r\n                                if(formLivraison.firstname!=\"\"&&formLivraison.lastname!==\"\"&&formLivraison.adress!==\"\"&&formLivraison.zip!==\"\"&&formLivraison.city!==\"\"&&formLivraison.country!==\"\"){\r\n                                confFormulaire()\r\n                                setError(\"\")\r\n                            }else{\r\n                               setError('One of the field is empty')\r\n                            }\r\n                            }} >Go to payment</div>} \r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div className='Total__cart_container'>\r\n                    <div>Cart : {roundDecimal(totalOrder)} €</div>\r\n                    <div>Delivery Fees : {deliveryFees} €</div>\r\n                    <div>Total : {roundDecimal(totalOrder + deliveryFees)} €</div>\r\n                </div>\r\n                \r\n                <div onClick={()=>resetSelectedCountry()}\r\n                    className='buttons__return__cart' style={{marginTop:80}}>\r\n                            Back to Cart\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CartList","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\CataloguePage\\product\\ArcSealed.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\ContactPage\\ContactStructure.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\CataloguePage\\product\\WtrSealed.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\CataloguePage\\product\\CruSealed.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\CataloguePage\\product\\MonSealed.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\CommandPage\\Command.js",["125"],"import React,{useEffect, useState} from 'react'\r\nimport './Command.css'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nfunction Command() {\r\n\r\n\r\n\r\n    \r\n    const [allHistoric,setAllHistoric] = useState([])\r\n\r\n    const [recharge,setRecharge] = useState(false)\r\n\r\n//========================================================================================================================================================\r\n/* \r\nUSEEFFECT THAT HAPPENS WHEN COMPONENT LOAD\r\n*/\r\n//========================================================================================================================================================\r\n    useEffect(() => {\r\n        if(isLogged && userData.arr.email === 'arnaud.rey.job@gmail.com'){\r\n\r\n            fetch(\"/users/getUsersList\",{\r\n                method: \"get\",\r\n            }).then(response=> {\r\n                return response.json()\r\n            })\r\n            .then(data=>{\r\n                console.log(\"retour fetch historic all users\",data);\r\n                setAllHistoric(data.historicAllOrder)\r\n            })\r\n            .catch((error)=>{\r\n                console.log(\"Request failed recup users list : \", error );\r\n            })\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(\"/users/getUsersList\",{\r\n            method: \"get\",\r\n        }).then(response=> {\r\n            return response.json()\r\n        })\r\n        .then(data=>{\r\n            console.log(\"retour fetch historic all users\",data);\r\n            setAllHistoric(data.historicAllOrder)\r\n        })\r\n        .catch((error)=>{\r\n            console.log(\"Request failed recup users list : \", error );\r\n        })\r\n    }, [recharge])\r\n\r\n//========================================================================================================================================================\r\n/* \r\nREDUX STATE\r\n*/\r\n//========================================================================================================================================================\r\nconst isLogged = useSelector(state => state.isLogged)\r\nconst userData = useSelector(state => state.user)\r\n\r\nconsole.log(userData.arr.historic)\r\n\r\n\r\nvar history = useHistory()\r\n\r\nvar commandHistory = userData.arr.historic\r\n\r\n//========================================================================================================================================================\r\n/* \r\nFUNCTION TO TRANSLATE DATE TO READABLE FORMAT\r\n*/\r\n//========================================================================================================================================================\r\nfunction translateDate (datePassed){\r\n    var dateObj = new Date(datePassed);\r\n    var month = dateObj.getUTCMonth() + 1; //months from 1-12\r\n    var day = dateObj.getUTCDate();\r\n    var year = dateObj.getUTCFullYear();\r\n    \r\n    var newdate = year + \"/\" + month + \"/\" + day;\r\n    return newdate\r\n}\r\n\r\nfunction changeStatus (email,idOrder){\r\n\r\n    fetch(\"/users/changeStatusOrder\",{\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n            email:email,\r\n            idOrder:idOrder\r\n        }),\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          }\r\n    }).then(response=> {\r\n        return response.json()\r\n    })\r\n    .then(data=>{\r\n        console.log(\"retour fetch change status order\",data.user);\r\n        setRecharge(!recharge)\r\n\r\n\r\n    })\r\n    .catch((error)=>{\r\n        console.log(\"Request failed recup user\", error );\r\n    })\r\n\r\n}\r\n\r\n//========================================================================================================================================================\r\n/* \r\nDOUBLE LOOP TO GET COMMAND HISTORY OF USER AND HIS COMMAND DETAIL\r\n*/\r\n//========================================================================================================================================================\r\nvar commandeHistoryList = commandHistory.map(function(item,i){\r\n    var commandToShow =  item.article.map(function(element, i){\r\n        return <div  className='historic__product__card' key={i}>\r\n                    {/* <img className='historic__product__img' src={element.url} alt=''></img> */}\r\n                    <div className='historic__product__info'>\r\n                        <div className='historic__product__name'>{element.title}</div>\r\n                        <div className='historic__product__price'>Price : {element.price} € / unit</div>\r\n                        <div className='historic__product__quantity'>Quantity : {element.quantity}</div>\r\n                    </div>\r\n                </div>\r\n    })\r\n    return<div className='command__array' key={i}>\r\n\r\n            <div className='command__array__header'>\r\n                <div className='command__array__header_ligne1'>\r\n                    <div>DATE</div>\r\n                    <div>TOTAL</div>\r\n                    <div>DELIVERY ADRESS</div>\r\n                    <div>STATUS</div>\r\n                </div>\r\n                <div className='command__array__header_ligne2'>\r\n                    <div>{translateDate(item.date)}</div>\r\n                    <div>{item.total+item.fdp} €</div>\r\n                    <div>{item.adress}</div>\r\n                    <div >{item.status===\"Order in progress\"?<div>{item.status}</div>\r\n                    :item.status}</div>\r\n                </div>\r\n            </div>\r\n            <div className='command__array__list'>\r\n                {commandToShow}\r\n            </div>\r\n        </div>\r\n        })\r\n\r\n//========================================================================================================================================================\r\n/* \r\nRETURN USER\r\n*/\r\n//========================================================================================================================================================\r\n    if(isLogged && userData.arr.email !== 'arnaud.rey.job@gmail.com'){return (\r\n        <div className='command__page'>\r\n            {commandeHistoryList}\r\n        </div>\r\n    )\r\n} \r\n//========================================================================================================================================================\r\n/* \r\nRETURN ADMIN\r\n*/\r\n//========================================================================================================================================================\r\nelse if(isLogged && userData.arr.email === 'arnaud.rey.job@gmail.com'){\r\n\r\n    console.log(\"allHistoric\",allHistoric);\r\n\r\n    return(\r\n        <div className='command__page'>\r\n\r\n            {allHistoric.map(historic => {\r\n                console.log(\"historic\",historic);\r\n\r\n\r\n                return(\r\n                    <div className='command__array'>\r\n                    <div className='command__array__header'>\r\n                        <div className='command__array__header_ligne1'>\r\n                            <div>Date de commande</div>\r\n                            <div>Total de la commande</div>\r\n                            <div>Adresse client</div>\r\n                            <div>Acheteur</div>\r\n                            <div>Frais de port</div>\r\n                            <div>Status de la commande</div>\r\n                        </div>\r\n                        <div className='command__array__header_ligne2'>\r\n                            <div>{translateDate(historic.date)}</div>\r\n                            <div>{historic.total} €</div>\r\n                            <div>{historic.adress}</div>\r\n                            <div>{historic.buyername}</div>\r\n                            <div>{historic.fdp}€</div>\r\n                            <div style={{display:'flex',alignItems:'center'}}>Doit etre posté <CheckIcon onClick={()=> changeStatus(historic.buyeremail,historic._id)} style={{color:'#0BD187',fontWeight:1800,marginLeft:10,cursor:'pointer',fontSize:30}}/></div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className='command__array__list'>\r\n                        {historic.article.map(card => {\r\n                            return(\r\n                                <div className='admin__detail'>\r\n                                    <div> {card.title}</div>\r\n                                    <div> Price : {card.price}€ /unit</div>\r\n                                    <div> Quantity : {card.quantity}</div>\r\n                                </div>)\r\n                        })}\r\n\r\n                    </div>\r\n                </div>\r\n                )\r\n\r\n            })}\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nelse{\r\n    return(\r\n    <div className='command__page'>\r\n        {history.push(\"/sign-in\")}\r\n    </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default Command\r\n","C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\reducers\\counter.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\reducers\\isLogged.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\reducers\\user.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\reducers\\totalCart.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\Components\\Cards.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\reducers\\cart.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\Components\\Paypal.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\actions\\index.js",[],"C:\\Users\\Arnaud\\Desktop\\Web Dev\\FleshAandBlood\\client\\src\\Components\\Loadingbar.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":76,"column":8,"nodeType":"132","endLine":76,"endColumn":10,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":396,"column":59,"nodeType":"136","messageId":"137","endLine":396,"endColumn":61},{"ruleId":"130","severity":1,"message":"138","line":37,"column":8,"nodeType":"132","endLine":37,"endColumn":10,"suggestions":"139"},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'CartList.arr', 'isLogged', 'userData.arr.adress.city', 'userData.arr.adress.country', 'userData.arr.adress.street', and 'userData.arr.adress.zip'. Either include them or remove the dependency array.","ArrayExpression",["142"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'isLogged' and 'userData.arr.email'. Either include them or remove the dependency array.",["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [CartList.arr, isLogged, userData.arr.adress.city, userData.arr.adress.country, userData.arr.adress.street, userData.arr.adress.zip]",{"range":"148","text":"149"},"Update the dependencies array to be: [isLogged, userData.arr.email]",{"range":"150","text":"151"},[2686,2688],"[CartList.arr, isLogged, userData.arr.adress.city, userData.arr.adress.country, userData.arr.adress.street, userData.arr.adress.zip]",[1302,1304],"[isLogged, userData.arr.email]"]